name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_USER: cinefindr
          POSTGRES_PASSWORD: cinefindr
          POSTGRES_DB: cinefindr_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint API
        run: npm run lint:api

      - name: Lint Web
        run: npm run lint:web

      - name: Setup database
        env:
          DATABASE_URL: postgresql://cinefindr:cinefindr@localhost:5432/cinefindr_test
        run: |
          cd apps/api
          npx prisma migrate deploy
          npm run db:pgvector

      - name: Test API
        env:
          DATABASE_URL: postgresql://cinefindr:cinefindr@localhost:5432/cinefindr_test
          REDIS_URL: redis://localhost:6379
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
          NEXTAUTH_SECRET: test-secret
        run: npm run test:api

      - name: Test Web
        run: npm run test:web

      - name: Build API
        run: npm run build:api

      - name: Build Web
        env:
          NEXT_PUBLIC_API_URL: http://localhost:3001
        run: npm run build:web

  e2e:
    runs-on: ubuntu-latest
    needs: lint-and-test

    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_USER: cinefindr
          POSTGRES_PASSWORD: cinefindr
          POSTGRES_DB: cinefindr_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: cd apps/web && npx playwright install --with-deps

      - name: Setup database
        env:
          DATABASE_URL: postgresql://cinefindr:cinefindr@localhost:5432/cinefindr_test
        run: |
          cd apps/api
          npx prisma migrate deploy
          npm run db:pgvector

      - name: Run E2E tests
        env:
          DATABASE_URL: postgresql://cinefindr:cinefindr@localhost:5432/cinefindr_test
          REDIS_URL: redis://localhost:6379
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
          NEXTAUTH_SECRET: test-secret
          NEXT_PUBLIC_API_URL: http://localhost:3001
        run: npm run test:e2e

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 30

